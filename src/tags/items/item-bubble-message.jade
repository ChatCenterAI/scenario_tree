item-bubble-message
  div.wrap-item.f.mt12.mb12.node-focused
    div.wrap-user-icon
      img(src='{userIcon}')
    div.wrap-bubble
      p.px10.py8 {messageText}

  style(scoped, type='less').
    :scope {
      transform: translateY(24px);
      opacity: 0.0;
      transition: all 400ms ease;
      .node-focused {

      }
      .wrap-item {
        .wrap-user-icon {
          width: 24px;
          height: 24px;
          overflow: hidden;
          border-radius: 50%;
          margin-right: 10px;
          img {
            height: 100%;
            object-fit: cover;
          }
        }
        .wrap-bubble {
          max-width: 70%;
          p {
            font-weight: lighter;
            background: #f0f0f0;
            border-radius: 3px;
            font-size: 12px;
          }
        }
      }
      .is-mine {
        flex-direction: row-reverse;
        .wrap-user-icon {
          display: none;
          /*margin-left: 10px !important;*/
        }
        .wrap-bubble {
          p {
            background: #2196F3;
            color: #FFF;
          }
        }
      }
      &.active {
        transform: translateY(0px) !important;
        opacity: 1.0 !important;
      }
    }


  script.

    var self = this;

    this.content = opts.__proto__.content;
    this.isMine = opts.__proto__.isMine;

    var photoUrl = session.user.photoUrl;
    this.userIcon = `${photoUrl}?width=280&amp;height=280`;
    this.messageText = this.content.text;

    this.on('mount', function(){
      if(self.isMine) self.root.children[0].classList.add('is-mine');
    });

    this.on('updated', function(){
      this.root.classList.add('active');

      // 最下部にスクロール
      var wrapMessages = document.getElementById('wrapMessages');
      wrapMessages.scrollTop = wrapMessages.scrollHeight;
    });


